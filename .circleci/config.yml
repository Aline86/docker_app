version: 2.1
orbs:
  node: circleci/node@5
jobs:
  app:
    build: 
      context: ./
      dockerfile: ./back/Dockerfile.backend
    ports:
      - 3000:3000
      - 447:447
    depends_on:
      mysqldb:
        condition: service_healthy
    env_file: .env
    
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - nodejs-mysql-network
  mysql:
    image: mysql:8.0.33
  
      expose:
        - "3306"
      ports:
        - 3306:3306
  
      environment:
        - MYSQL_DATABASE=${DB_NAME}
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      volumes:
        - mysql-data:/var/lib/mysql
      networks:
        - nodejs-mysql-network
      healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        retries: 10
        interval: 3s
        timeout: 30s
  front:
    build:
      context: ./
      dockerfile: front/Dockerfile.frontend
    container_name: front
    links:
      - app
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8080:80"
    #  - "443:443"
    volumes:
      - ./front:/usr/share/nginx/html
    networks:
      - nodejs-mysql-network
      
deploy:
    # This is an example deploy job, not actually used by the workflow
    mysql:
      image: mysql:8.0.33
    front:
      image: nginx:latest
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: docker-compose build / docker-compose up

         
